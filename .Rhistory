group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y"),
trade_date = NA,
position = 'Suggested trade',
pfr_name = NA
) -> suggested_trade
summary_set%>%
filter(amount_received > 0,
amount_given > 0,
between(pick_number, input$Pick_num[1], input$Pick_num[2]),
between(season, input$bins[1], input$bins[2]),
gave %in% input$Gave,
received %in% input$Received
)%>%
bind_rows(suggested_trade)%>%
# select(-position)%>%
ggplot(aes(x = pick_number, y= amount_received-amount_given))+
geom_point(size = 1.5, aes(size = 2, color = position))+
geom_vline(xintercept = 1)+
geom_hline(yintercept = 0)+
geom_smooth(
# data=summary_set%>%
#  filter(pick_number <= 32,
#         amount_received > 0,
#         amount_given > 0,
#         position %in% c('QB','non-QB')),
se= FALSE,
color = 'black')+
theme_bw()+
facet_wrap(. ~ chart_type, scale = 'free')+
labs(x = '\nPick number',
y= 'Expected additional amount received in return\n')+
# xlab(TeX('$Pick\.number$'))+
# ylab(TeX('$E(Additional amount received in return)$'))+
# ggtitle('Pick_nun vs the E(Additional amount received) in return.')+
theme(legend.position = c(0.85, 0.25),
legend.background = element_rect(fill = "white", colour = NA),
legend.title = element_blank())
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = NA,
position = 'Suggested trade',
pfr_name = NA
) -> suggested_trade
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = NA,
position = 'Suggested trade',
pfr_name = NA
)%>%
ungroup() -> suggested_trade
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
# filter(Pick_Name %in% c(input$Team_1_picks, input$Team_2_picks))
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = NA,
position = 'Suggested trade',
pfr_name = NA
)%>%
ungroup() -> suggested_trade
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
# filter(Pick_Name %in% c(input$Team_1_picks, input$Team_2_picks))
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = NA,
position = 'Suggested trade',
pfr_name = NA
)%>%
ungroup() -> suggested_trade
View(suggested_trade)
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
rm(suggested_trade)
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
rm(team_picks)
runApp('NFL draft/NFL_draft_app')
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
# filter(Pick_Name %in% c(input$Team_1_picks, input$Team_2_picks))%>%
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = '2023-04-01',
position = 'Suggested trade',
pfr_name = 'Suggested trade'
)%>%
ungroup() -> suggested_trade
team_picks <-   nfl_draft_order%>%
# filter(Team %in% c(input$Team_1, input$Team_2))
filter(Team %in% c('CHI', 'IND'))
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
# filter(Pick_Name %in% c(input$Team_1_picks, input$Team_2_picks))%>%
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = '2023-04-01',
position = 'Suggested trade',
pfr_name = 'Suggested trade'
)%>%
ungroup() -> suggested_trade
summary_set%>%
filter(amount_received > 0,
amount_given > 0,
# between(pick_number, input$Pick_num[1], input$Pick_num[2]),
between(pick_number, 1, 32),
# between(season, input$bins[1], input$bins[2]),
between(season, 2011, 2022)
# ,
# gave %in% input$Gave,
# received %in% input$Received
)%>%
bind_rows(suggested_trade)%>%
ggplot(aes(x = pick_number, y= amount_received-amount_given))+
geom_point(size = 1.5, aes(size = 2, color = position))+
geom_vline(xintercept = 1)+
geom_hline(yintercept = 0)+
geom_smooth(se= FALSE, color = 'black')+
theme_bw()+
facet_wrap(. ~ chart_type, scale = 'free')+
labs(x = '\nPick number',
y= 'Expected additional amount received in return\n')+
# xlab(TeX('$Pick\.number$'))+
# ylab(TeX('$E(Additional amount received in return)$'))+
# ggtitle('Pick_nun vs the E(Additional amount received) in return.')+
theme(legend.position = c(0.85, 0.25),
legend.background = element_rect(fill = "white", colour = NA),
legend.title = element_blank())
rm(team_picks)
rm(suggested_trade)
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
team_picks <-   nfl_draft_order%>%
# filter(Team %in% c(input$Team_1, input$Team_2))
filter(Team %in% c('CHI', 'IND'))
View(team_picks)
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
filter(Pick_Name %in% c(input$Team_1_picks, input$Team_2_picks))%>%
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = '2023-04-01',
position = 'Suggested trade',
pfr_name = 'Suggested trade'
)%>%
ungroup() -> suggested_trade
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)%>%
# filter(Pick_Name %in% c(input$Team_1_picks, input$Team_2_picks))%>%
mutate(trade_id = 40000)%>%
group_by(trade_id, gave, received)%>%
summarise(stuart = sum(stuart),
johnson = sum(johnson),
hill = sum(hill),
otc = sum(otc),
pff = sum(pff),
min_pick_ev = min(Pick_number),
trade_results = paste(sort(Pick_Name), collapse = ', '))%>%
ungroup()%>%
gather(chart_type, amount, stuart:pff)%>%
left_join(., ., by = c("gave"="received",
"chart_type" = "chart_type"))%>%
transmute(trade_id = trade_id.x,
gave,
received,
pick_number = min_pick_ev.x,
chart_type,
amount_received = amount.x,
amount_given = amount.y,
given = trade_results.x,
offered = trade_results.y)%>%
group_by(chart_type)%>%
filter(pick_number == min(pick_number))%>%
mutate(difference = amount_received-amount_given,
given_percentage = (amount_given-amount_received)/amount_given,
received_percentage = (amount_received-amount_given)/amount_received,
season = format(Sys.Date(), "%Y")%>%as.numeric(),
trade_date = '2023-04-01',
position = 'Suggested trade',
pfr_name = 'Suggested trade'
)%>%
ungroup() -> suggested_trade
team_picks%>%
transmute(Pick_number,
gave = Team,
# received = ifelse(gave == input$Team_1, input$Team_2, input$Team_1),
received = ifelse(Team == 'CHI', 'IND', 'CHI'),
Round, Year, stuart, johnson, hill, otc, pff, Pick_Name)
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp()
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
shiny::runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
runApp('NFL draft/NFL_draft_app')
setwd("~/NFL draft/NFL_draft_app")
load("~/NFL draft/NFL_draft_app/.RData")
load("~/NFL draft/NFL_draft_app/.RData")
runApp()
runApp()
summary_set%>%
filter(amount_received > 0,
amount_given > 0,
between(pick_number, input$Pick_num[1], input$Pick_num[2]),
# between(pick_number, 1, 32),
between(season, input$bins[1], input$bins[2]),
# between(season, 2011, 2022),
gave %in% input$Gave,
received %in% input$Received
)%>%
bind_rows(suggested_trade)%>%
mutate(chart_type = tools::toTitleCase(chart_type))%>%
ggplot(aes(x = pick_number,
# y= -difference
y = -given_percentage
))+
geom_point(size = 3.5, aes(color = position, shape = position))+
# geom_point(data = suggested_trade, aes(x = pick_number ,y = difference, color = 'blue'))+
geom_vline(xintercept = 1)+
geom_hline(yintercept = 0)+
geom_smooth(se= FALSE, color = 'black')+
theme_bw()+
facet_wrap(. ~ chart_type, scale = 'free')+
labs(x = '\nPick number',
y= 'Expected additional amount received in return\n')+
# xlab(TeX('$Pick\.number$'))+
# ylab(TeX('$E(Additional amount received in return)$'))+
# ggtitle('Pick_nun vs the E(Additional amount received) in return.')+
theme(legend.position = c(0.85, 0.25),
legend.background = element_rect(fill = "white", colour = NA),
legend.title = element_blank(),
text = element_text(size=20))
runApp()
runApp()
runApp()
